ARG BASE_IMAGE_TAG="20.04"
# Inherit Python3
FROM ubuntu:${BASE_IMAGE_TAG}

ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get update && apt-get install --no-install-recommends --fix-missing -y \
    build-essential \
    ca-certificates \
    git \
    gcc \
    numactl \
    wget 
# Set Conda PATHs
ARG CONDA_INSTALL_PATH=/opt/conda
ARG CONDA_PREFIX=/opt/conda/envs/transfer_learning
ARG MINICONDA_VERSION="latest"
# Miniconda Installation
RUN apt-get update && \
    wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh -O miniconda.sh && \
    bash miniconda.sh -b -p ${CONDA_INSTALL_PATH} && \
    rm miniconda.sh && \
    ln -s ${CONDA_INSTALL_PATH}/etc/profile.d/conda.sh /etc/profile.d/conda.sh && \
    ${CONDA_INSTALL_PATH}/bin/conda clean --all && \
    echo ". ${CONDA_INSTALL_PATH}/etc/profile.d/conda.sh" >> ~/.bashrc && \
    echo "conda activate transfer_learning" >> ~/.bashrc
# PATH prefers env over default conda
ENV PATH="${CONDA_PREFIX}/bin:${CONDA_INSTALL_PATH}/bin:${PATH}"

ARG PYTHON_VERSION="3.8"

SHELL ["/bin/bash", "-c"]
# Create env and install requirements via conda + pip
RUN conda create -y -n transfer_learning python=${PYTHON_VERSION} && \
    source activate transfer_learning && \
    conda install -y -c conda-forge gperftools && \
    conda install -y intel-openmp pip && \
    conda clean -ya && \
    pip install intel-tensorflow \
        matplotlib \
        Pillow \
        scikit-learn \
        tensorflow_datasets \
        tensorflow_hub
# Overwrite for newest GLIBCXX version
ENV LD_LIBRARY_PATH="/opt/conda/envs/transfer_learning/lib/:${LD_LIBRARY_PATH}"
# Default Workspace
RUN mkdir -p /workspace/transfer-learning
